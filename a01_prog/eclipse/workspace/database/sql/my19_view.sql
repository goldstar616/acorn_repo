/*
VIEW
쿼리 결과로 이루어진 가상 테이블
물리적인 구조는 기존 내용을 사용

사용목적
1. 직접적인 테이블 접근 제한 (보안상의 목적)
2. 복잡한 질의 간소화

형식
CREATE [OR REPLACE] VIEW 뷰이름
AS SUBQUERY(SQL);
-- 관리자 계정으로 접근
*/
CREATE TABLE EMP08
AS SELECT * FROM EMP;

##CREATE VIEW EMP_VIEW10
AS SELECT EMPNO, ENAME, SAL, DEPTNO 
			FROM EMP08 
			WHERE DEPTNO = 30;

SELECT * FROM EMP_VIEW10;

INSERT INTO EMP_VIEW10 VALUES(8888, '홍길동', 1700, 30);

UPDATE EMP_VIEW10
SET ENAME='HIMAN'
WHERE EMPNO=7900;

INSERT INTO EMP_VIEW10 VALUES(8889, '홍길동2', 1700, 40);

SELECT * FROM EMP08;
SELECT * FROM EMP_VIEW10;
/*
VIEW에 데이터가 저장되는게 아니라 원본 TABLE에 저장됨.
DEPTN0 40인 데이터가 입력은 되나 VIEW에서는 쿼리결과 보이지 않는다.

VIEW의 생성시 옵션 설정
1. DROP VIEW EMP_VIEW10
2. WITH CHECK OPTION
3. WITH READ ONLY(보안용)
*/
DROP VIEW EMP_VIEW10;
 
CREATE VIEW EMP_VIEW10
AS SELECT EMPNO, ENAME, SAL, DEPTNO 
			FROM EMP08 
			WHERE DEPTNO = 30
			WITH CHECK OPTION;
INSERT INTO EMP_VIEW10 VALUES(8889, '홍길동2', 1700, 40); -- DEPTNO 40인 데이터는 저장 안됨

DROP VIEW EMP_VIEW10;
 
CREATE VIEW EMP_VIEW10
AS SELECT EMPNO, ENAME, SAL, DEPTNO 
			FROM EMP08 
			WHERE DEPTNO = 30
			WITH READ ONLY;
INSERT INTO EMP_VIEW10 VALUES(8889, '홍길동2', 1700, 40); -- 입력 자체가 안됨

/*
확인예제
1. EMP09 복사테이블 생성
2. 연봉이 3000이하이며 직책이 SALESMAN인 뷰테이블 생성 WITH CHECK OPTION
3. 보너스가 없는 데이터이며 검색만 가능한 뷰테이블 생성 WITH READ ONLY
*/
CREATE TABLE EMP09
AS SELECT * FROM EMP;

CREATE VIEW EMP_VIEW12
AS SELECT * FROM EMP09
	WHERE SAL<=3000
	AND JOB = 'SALESMAN'
	WITH CHECK OPTION;

SELECT * FROM EMP_VIEW12;
INSERT INTO EMP_VIEW12 VALUES(8000, '홍길동', 'SALESMAN', SYSDATE, 7698, 3000, 100, 40);
CREATE VIEW EMP_VIEW13
AS SELECT * FROM EMP09
	WHERE COMM IS NULL
	WITH READ ONLY;
INSERT INTO EMP_VIEW12 VALUES(8001, '홍길동2', 'SALESMAN', SYSDATE, 7698, 3000, 100, 40);

/*
복합 뷰
두개 이상의 기본 테이블에 의해 정의된 뷰
복잡한 쿼리를 단순화
형식
CREATE VIEW 뷰이름
AS SELECT A.컬럼1, A.컬럼2, B.컬럼1
	FROM 테이블1 A, 테이블2 B
	WHERE A.컬럼 = B.컬럼
	AND 조건;
*/
CREATE VIEW SHOW_PART_VIEW
AS SELECT EMPNO, ENAME, DNAME
	FROM EMP09 A, DEPT B
	